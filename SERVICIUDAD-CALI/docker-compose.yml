services:
  postgres:
    image: postgres:15-alpine
    container_name: serviciudad-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-serviciudad_db}
      POSTGRES_USER: ${POSTGRES_USER:-serviciudad_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-serviciudad_pass}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./src/main/resources/data.sql:/docker-entrypoint-initdb.d/02-data.sql
    ports:
      - "5432:5432"
    networks:
      - serviciudad-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U serviciudad_user -d serviciudad_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: serviciudad-app
    environment:
      SPRING_PROFILES_ACTIVE: prod
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-serviciudad_db}
      POSTGRES_USER: ${POSTGRES_USER:-serviciudad_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-serviciudad_pass}
      SERVER_PORT: 8080
      ENERGIA_ARCHIVO_PATH: /app/data/consumos_energia.txt
      JAVA_OPTS: "-Xms256m -Xmx512m"
    ports:
      - "8080:8080"
    networks:
      - serviciudad-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./frontend:/app/frontend

networks:
  serviciudad-network:
    driver: bridge
    name: serviciudad-network

volumes:
  postgres_data:
    name: serviciudad-postgres-data
